environment:
  TWINE_USERNAME:
    secure: qqioSb3Yu/QTOdDKx10sDQ==
  TWINE_PASSWORD:
    secure: y8XwCStmwBEwWyXQ108iC7I+WFje6C7rbc0ypp56Q2g=
  TWINE_REPOSITORY_URL:
    'https://upload.pypi.org/legacy/'
  matrix:
    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

clone_depth: 5
max_jobs: 2

install:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  # Install Python (from the official .msi of http://python.org) and pip when not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }
  - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - pip install -r data\requirements.txt

test: off

build_script:
  # Build the compiled extension
  - python setup.py build_ext --inplace > buildextlog.txt
  - pip install wheel twine cx_freeze six appdirs packaging pyaudio
  - python -c "import cx_Freeze; print(cx_Freeze.__version__)"
  - python -c "import tempfile, os; open(os.path.join(tempfile.gettempdir(), 'urh_releasing'), 'w').close()"
  - python setup.py bdist_wheel > bdist_log.txt
  - python data\build_cx.py > build_log.txt
  - dir dist

on_failure:
  - type buildextlog.txt
  - type bdist_log.txt
  - type build_log.txt

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*
